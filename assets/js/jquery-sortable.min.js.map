{"version":3,"sources":["jquery-sortable.js"],"names":["$","window","pluginName","undefined","containerDefaults","drag","exclude","nested","vertical","afterMove","$placeholder","container","$closestItemOrContainer","containerPath","containerSelector","delay","itemPath","itemSelector","bodyClass","isValidTarget","$item","onCancel","_super","event","onDrag","position","css","onDragStart","outerHeight","height","outerWidth","addClass","group","options","draggedClass","onDrop","removeClass","removeAttr","onMousedown","target","nodeName","match","preventDefault","placeholderClass","placeholder","pullPlaceholder","serialize","$parent","$children","parentIsContainer","extend","children","result","subContainers","sortable","tolerance","groupCounter","left","top","bottom","right","eventNames","start","scroll","drop","subContainerKey","x","a","y","Math","max","b","array","dimensions","useOffset","i","length","offsetMethod","pos","parseInt","el","getRelativePosition","offset","element","pointer","sortByDistanceDesc","lastPointer","dim","distances","d","groupDefaults","containers","this","ContainerGroup","rootGroup","containerGroups","proxy","Container","movePlaceholder","get","handle","distance","hasChildGroup","found","getContainerGroup","searchValidTarget","on","validTarget","dragInit","push","$document","itemContainer","closestItem","prototype","e","ownerDocument","dragInitDone","closest","item","dragging","setPointer","toggleListeners","box","sameResultBox","t","distanceMet","before","offsetParent","p","getPointer","clearDimensions","clearOffsetParent","lastAppendedItem","detach","index","getContainer","$getOffsetParent","lastRelativePointer","getContainerDimensions","method","containerDimensions","setDimensions","getItemOffsetParent","data","relativePointer","abs","pageY","clearTimeout","_mouseDelayTimer","setTimeout","that","currentPointer","events","each","o","originalEvent","touches","setupDelayTimer","object","_clearDimensions","delayMet","callback","traverse","isValidDrag","type","items","itemDimensions","width","disabled","which","inUpperHalf","yCenter","inLeftHalf","emptyBox","$getChildren","childGroup","xCenter","parent","getItemDimensions","selector","filter","path","find","_destroy","removeData","childContainers","API","disable","_serialize","childType","isContainer","destroy","not","map","fn","args","off","grep","val","enable","refresh","methodOrOptions","Array","slice","call","arguments","$t","apply","_typeof","jQuery"],"mappings":"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","file":"jquery-sortable.min.js","sourcesContent":["/* ===================================================\n *  jquery-sortable.js v0.9.13\n *  http://johnny.github.com/jquery-sortable/\n * ===================================================\n *  Copyright (c) 2012 Jonas von Andrian\n *  All rights reserved.\n *\n *  Redistribution and use in source and binary forms, with or without\n *  modification, are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *  * The name of the author may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n *  DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n *  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n *  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n *  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * ========================================================== */\n\n\n!function ( $, window, pluginName, undefined){\n  var containerDefaults = {\n    // If true, items can be dragged from this container\n    drag: true,\n    // If true, items can be droped onto this container\n    drop: true,\n    // Exclude items from being draggable, if the\n    // selector matches the item\n    exclude: \"\",\n    // If true, search for nested containers within an item.If you nest containers,\n    // either the original selector with which you call the plugin must only match the top containers,\n    // or you need to specify a group (see the bootstrap nav example)\n    nested: true,\n    // If true, the items are assumed to be arranged vertically\n    vertical: true\n  }, // end container defaults\n  groupDefaults = {\n    // This is executed after the placeholder has been moved.\n    // $closestItemOrContainer contains the closest item, the placeholder\n    // has been put at or the closest empty Container, the placeholder has\n    // been appended to.\n    afterMove: function ($placeholder, container, $closestItemOrContainer) {\n    },\n    // The exact css path between the container and its items, e.g. \"> tbody\"\n    containerPath: \"\",\n    // The css selector of the containers\n    containerSelector: \"ol, ul\",\n    // Distance the mouse has to travel to start dragging\n    distance: 0,\n    // Time in milliseconds after mousedown until dragging should start.\n    // This option can be used to prevent unwanted drags when clicking on an element.\n    delay: 0,\n    // The css selector of the drag handle\n    handle: \"\",\n    // The exact css path between the item and its subcontainers.\n    // It should only match the immediate items of a container.\n    // No item of a subcontainer should be matched. E.g. for ol>div>li the itemPath is \"> div\"\n    itemPath: \"\",\n    // The css selector of the items\n    itemSelector: \"li\",\n    // The class given to \"body\" while an item is being dragged\n    bodyClass: \"dragging\",\n    // The class giving to an item while being dragged\n    draggedClass: \"dragged\",\n    // Check if the dragged item may be inside the container.\n    // Use with care, since the search for a valid container entails a depth first search\n    // and may be quite expensive.\n    isValidTarget: function ($item, container) {\n      return true;\n    },\n    // Executed before onDrop if placeholder is detached.\n    // This happens if pullPlaceholder is set to false and the drop occurs outside a container.\n    onCancel: function ($item, container, _super, event) {\n    },\n    // Executed at the beginning of a mouse move event.\n    // The Placeholder has not been moved yet.\n    onDrag: function ($item, position, _super, event) {\n      $item.css(position);\n    },\n    // Called after the drag has been started,\n    // that is the mouse button is being held down and\n    // the mouse is moving.\n    // The container is the closest initialized container.\n    // Therefore it might not be the container, that actually contains the item.\n    onDragStart: function ($item, container, _super, event) {\n      $item.css({\n        height: $item.outerHeight(),\n        width: $item.outerWidth()\n      });\n      $item.addClass(container.group.options.draggedClass);\n      $(\"body\").addClass(container.group.options.bodyClass);\n    },\n    // Called when the mouse button is being released\n    onDrop: function ($item, container, _super, event) {\n      $item.removeClass(container.group.options.draggedClass).removeAttr(\"style\");\n      $(\"body\").removeClass(container.group.options.bodyClass);\n    },\n    // Called on mousedown. If falsy value is returned, the dragging will not start.\n    // Ignore if element clicked is input, select or textarea\n    onMousedown: function ($item, _super, event) {\n      if (!event.target.nodeName.match(/^(input|select|textarea)$/i)) {\n        event.preventDefault();\n        return true;\n      }\n    },\n    // The class of the placeholder (must match placeholder option markup)\n    placeholderClass: \"placeholder\",\n    // Template for the placeholder. Can be any valid jQuery input\n    // e.g. a string, a DOM element.\n    // The placeholder must have the class \"placeholder\"\n    placeholder: '<li class=\"placeholder\"></li>',\n    // If true, the position of the placeholder is calculated on every mousemove.\n    // If false, it is only calculated when the mouse is above a container.\n    pullPlaceholder: true,\n    // Specifies serialization of the container group.\n    // The pair $parent/$children is either container/items or item/subcontainers.\n    serialize: function ($parent, $children, parentIsContainer) {\n      var result = $.extend({}, $parent.data());\n\n      if(parentIsContainer)\n        return [$children];\n      else if ($children[0]){\n        result.children = $children;\n      }\n\n      delete result.subContainers;\n      delete result.sortable;\n\n      return result;\n    },\n    // Set tolerance while dragging. Positive values decrease sensitivity,\n    // negative values increase it.\n    tolerance: 0\n  }, // end group defaults\n  containerGroups = {},\n  groupCounter = 0,\n  emptyBox = {\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right:0\n  },\n  eventNames = {\n    start: \"touchstart.sortable mousedown.sortable\",\n    drop: \"touchend.sortable touchcancel.sortable mouseup.sortable\",\n    drag: \"touchmove.sortable mousemove.sortable\",\n    scroll: \"scroll.sortable\"\n  },\n  subContainerKey = \"subContainers\";\n\n  /*\n   * a is Array [left, right, top, bottom]\n   * b is array [left, top]\n   */\n  function d(a,b) {\n    var x = Math.max(0, a[0] - b[0], b[0] - a[1]),\n    y = Math.max(0, a[2] - b[1], b[1] - a[3]);\n    return x+y;\n  }\n\n  function setDimensions(array, dimensions, tolerance, useOffset) {\n    var i = array.length,\n    offsetMethod = useOffset ? \"offset\" : \"position\";\n    tolerance = tolerance || 0;\n\n    while(i--){\n      var el = array[i].el ? array[i].el : $(array[i]),\n      // use fitting method\n      pos = el[offsetMethod]();\n      pos.left += parseInt(el.css('margin-left'), 10);\n      pos.top += parseInt(el.css('margin-top'),10);\n      dimensions[i] = [\n        pos.left - tolerance,\n        pos.left + el.outerWidth() + tolerance,\n        pos.top - tolerance,\n        pos.top + el.outerHeight() + tolerance\n      ];\n    }\n  }\n\n  function getRelativePosition(pointer, element) {\n    var offset = element.offset();\n    return {\n      left: pointer.left - offset.left,\n      top: pointer.top - offset.top\n    };\n  }\n\n  function sortByDistanceDesc(dimensions, pointer, lastPointer) {\n    pointer = [pointer.left, pointer.top];\n    lastPointer = lastPointer && [lastPointer.left, lastPointer.top];\n\n    var dim,\n    i = dimensions.length,\n    distances = [];\n\n    while(i--){\n      dim = dimensions[i];\n      distances[i] = [i,d(dim,pointer), lastPointer && d(dim, lastPointer)];\n    }\n    distances = distances.sort(function  (a,b) {\n      return b[1] - a[1] || b[2] - a[2] || b[0] - a[0];\n    });\n\n    // last entry is the closest\n    return distances;\n  }\n\n  function ContainerGroup(options) {\n    this.options = $.extend({}, groupDefaults, options);\n    this.containers = [];\n\n    if(!this.options.rootGroup){\n      this.scrollProxy = $.proxy(this.scroll, this);\n      this.dragProxy = $.proxy(this.drag, this);\n      this.dropProxy = $.proxy(this.drop, this);\n      this.placeholder = $(this.options.placeholder);\n\n      if(!options.isValidTarget)\n        this.options.isValidTarget = undefined;\n    }\n  }\n\n  ContainerGroup.get = function  (options) {\n    if(!containerGroups[options.group]) {\n      if(options.group === undefined)\n        options.group = groupCounter ++;\n\n      containerGroups[options.group] = new ContainerGroup(options);\n    }\n\n    return containerGroups[options.group];\n  };\n\n  ContainerGroup.prototype = {\n    dragInit: function  (e, itemContainer) {\n      this.$document = $(itemContainer.el[0].ownerDocument);\n\n      // get item to drag\n      var closestItem = $(e.target).closest(this.options.itemSelector);\n      // using the length of this item, prevents the plugin from being started if there is no handle being clicked on.\n      // this may also be helpful in instantiating multidrag.\n      if (closestItem.length) {\n        this.item = closestItem;\n        this.itemContainer = itemContainer;\n        if (this.item.is(this.options.exclude) || !this.options.onMousedown(this.item, groupDefaults.onMousedown, e)) {\n            return;\n        }\n        this.setPointer(e);\n        this.toggleListeners('on');\n        this.setupDelayTimer();\n        this.dragInitDone = true;\n      }\n    },\n    drag: function  (e) {\n      if(!this.dragging){\n        if(!this.distanceMet(e) || !this.delayMet)\n          return;\n\n        this.options.onDragStart(this.item, this.itemContainer, groupDefaults.onDragStart, e);\n        this.item.before(this.placeholder);\n        this.dragging = true;\n      }\n\n      this.setPointer(e);\n      // place item under the cursor\n      this.options.onDrag(this.item,\n                          getRelativePosition(this.pointer, this.item.offsetParent()),\n                          groupDefaults.onDrag,\n                          e);\n\n      var p = this.getPointer(e),\n      box = this.sameResultBox,\n      t = this.options.tolerance;\n\n      if(!box || box.top - t > p.top || box.bottom + t < p.top || box.left - t > p.left || box.right + t < p.left)\n        if(!this.searchValidTarget()){\n          this.placeholder.detach();\n          this.lastAppendedItem = undefined;\n        }\n    },\n    drop: function  (e) {\n      this.toggleListeners('off');\n\n      this.dragInitDone = false;\n\n      if(this.dragging){\n        // processing Drop, check if placeholder is detached\n        if(this.placeholder.closest(\"html\")[0]){\n          this.placeholder.before(this.item).detach();\n        } else {\n          this.options.onCancel(this.item, this.itemContainer, groupDefaults.onCancel, e);\n        }\n        this.options.onDrop(this.item, this.getContainer(this.item), groupDefaults.onDrop, e);\n\n        // cleanup\n        this.clearDimensions();\n        this.clearOffsetParent();\n        this.lastAppendedItem = this.sameResultBox = undefined;\n        this.dragging = false;\n      }\n    },\n    searchValidTarget: function  (pointer, lastPointer) {\n      if(!pointer){\n        pointer = this.relativePointer || this.pointer;\n        lastPointer = this.lastRelativePointer || this.lastPointer;\n      }\n\n      var distances = sortByDistanceDesc(this.getContainerDimensions(),\n                                         pointer,\n                                         lastPointer),\n      i = distances.length;\n\n      while(i--){\n        var index = distances[i][0],\n        distance = distances[i][1];\n\n        if(!distance || this.options.pullPlaceholder){\n          var container = this.containers[index];\n          if(!container.disabled){\n            if(!this.$getOffsetParent()){\n              var offsetParent = container.getItemOffsetParent();\n              pointer = getRelativePosition(pointer, offsetParent);\n              lastPointer = getRelativePosition(lastPointer, offsetParent);\n            }\n            if(container.searchValidTarget(pointer, lastPointer))\n              return true;\n          }\n        }\n      }\n      if(this.sameResultBox)\n        this.sameResultBox = undefined;\n    },\n    movePlaceholder: function  (container, item, method, sameResultBox) {\n      var lastAppendedItem = this.lastAppendedItem;\n      if(!sameResultBox && lastAppendedItem && lastAppendedItem[0] === item[0])\n        return;\n\n      item[method](this.placeholder);\n      this.lastAppendedItem = item;\n      this.sameResultBox = sameResultBox;\n      this.options.afterMove(this.placeholder, container, item);\n    },\n    getContainerDimensions: function  () {\n      if(!this.containerDimensions)\n        setDimensions(this.containers, this.containerDimensions = [], this.options.tolerance, !this.$getOffsetParent());\n      return this.containerDimensions;\n    },\n    getContainer: function  (element) {\n      return element.closest(this.options.containerSelector).data(pluginName);\n    },\n    $getOffsetParent: function  () {\n      if(this.offsetParent === undefined){\n        var i = this.containers.length - 1,\n        offsetParent = this.containers[i].getItemOffsetParent();\n\n        if(!this.options.rootGroup){\n          while(i--){\n            if(offsetParent[0] != this.containers[i].getItemOffsetParent()[0]){\n              // If every container has the same offset parent,\n              // use position() which is relative to this parent,\n              // otherwise use offset()\n              // compare #setDimensions\n              offsetParent = false;\n              break;\n            }\n          }\n        }\n\n        this.offsetParent = offsetParent;\n      }\n      return this.offsetParent;\n    },\n    setPointer: function (e) {\n      var pointer = this.getPointer(e);\n\n      if(this.$getOffsetParent()){\n        var relativePointer = getRelativePosition(pointer, this.$getOffsetParent());\n        this.lastRelativePointer = this.relativePointer;\n        this.relativePointer = relativePointer;\n      }\n\n      this.lastPointer = this.pointer;\n      this.pointer = pointer;\n    },\n    distanceMet: function (e) {\n      var currentPointer = this.getPointer(e);\n      return (Math.max(\n        Math.abs(this.pointer.left - currentPointer.left),\n        Math.abs(this.pointer.top - currentPointer.top)\n      ) >= this.options.distance);\n    },\n    getPointer: function(e) {\n      var o = e.originalEvent || e.originalEvent.touches && e.originalEvent.touches[0];\n      return {\n        left: e.pageX || o.pageX,\n        top: e.pageY || o.pageY\n      };\n    },\n    setupDelayTimer: function () {\n      var that = this;\n      this.delayMet = !this.options.delay;\n\n      // init delay timer if needed\n      if (!this.delayMet) {\n        clearTimeout(this._mouseDelayTimer);\n        this._mouseDelayTimer = setTimeout(function() {\n          that.delayMet = true;\n        }, this.options.delay);\n      }\n    },\n    scroll: function  (e) {\n      this.clearDimensions();\n      this.clearOffsetParent(); // TODO is this needed?\n    },\n    toggleListeners: function (method) {\n      var that = this,\n      events = ['drag','drop','scroll'];\n\n      $.each(events,function  (i,event) {\n        that.$document[method](eventNames[event], that[event + 'Proxy']);\n      });\n    },\n    clearOffsetParent: function () {\n      this.offsetParent = undefined;\n    },\n    // Recursively clear container and item dimensions\n    clearDimensions: function  () {\n      this.traverse(function(object){\n        object._clearDimensions();\n      });\n    },\n    traverse: function(callback) {\n      callback(this);\n      var i = this.containers.length;\n      while(i--){\n        this.containers[i].traverse(callback);\n      }\n    },\n    _clearDimensions: function(){\n      this.containerDimensions = undefined;\n    },\n    _destroy: function () {\n      containerGroups[this.options.group] = undefined;\n    }\n  };\n\n  function Container(element, options) {\n    this.el = element;\n    this.options = $.extend( {}, containerDefaults, options);\n\n    this.group = ContainerGroup.get(this.options);\n    this.rootGroup = this.options.rootGroup || this.group;\n    this.handle = this.rootGroup.options.handle || this.rootGroup.options.itemSelector;\n\n    var itemPath = this.rootGroup.options.itemPath;\n    this.target = itemPath ? this.el.find(itemPath) : this.el;\n\n    this.target.on(eventNames.start, this.handle, $.proxy(this.dragInit, this));\n\n    if(this.options.drop)\n      this.group.containers.push(this);\n  }\n\n  Container.prototype = {\n    dragInit: function  (e) {\n      var rootGroup = this.rootGroup;\n\n      if( !this.disabled &&\n          !rootGroup.dragInitDone &&\n          this.options.drag &&\n          this.isValidDrag(e)) {\n        rootGroup.dragInit(e, this);\n      }\n    },\n    isValidDrag: function(e) {\n      return e.which == 1 ||\n        e.type == \"touchstart\" && e.originalEvent.touches.length == 1;\n    },\n    searchValidTarget: function  (pointer, lastPointer) {\n      var distances = sortByDistanceDesc(this.getItemDimensions(),\n                                         pointer,\n                                         lastPointer),\n      i = distances.length,\n      rootGroup = this.rootGroup,\n      validTarget = !rootGroup.options.isValidTarget ||\n        rootGroup.options.isValidTarget(rootGroup.item, this);\n\n      if(!i && validTarget){\n        rootGroup.movePlaceholder(this, this.target, \"append\");\n        return true;\n      } else\n        while(i--){\n          var index = distances[i][0],\n          distance = distances[i][1];\n          if(!distance && this.hasChildGroup(index)){\n            var found = this.getContainerGroup(index).searchValidTarget(pointer, lastPointer);\n            if(found)\n              return true;\n          }\n          else if(validTarget){\n            this.movePlaceholder(index, pointer);\n            return true;\n          }\n        }\n    },\n    movePlaceholder: function  (index, pointer) {\n      var item = $(this.items[index]),\n      dim = this.itemDimensions[index],\n      method = \"after\",\n      width = item.outerWidth(),\n      height = item.outerHeight(),\n      offset = item.offset(),\n      sameResultBox = {\n        left: offset.left,\n        right: offset.left + width,\n        top: offset.top,\n        bottom: offset.top + height\n      };\n      if(this.options.vertical){\n        var yCenter = (dim[2] + dim[3]) / 2,\n        inUpperHalf = pointer.top <= yCenter;\n        if(inUpperHalf){\n          method = \"before\";\n          sameResultBox.bottom -= height / 2;\n        } else\n          sameResultBox.top += height / 2;\n      } else {\n        var xCenter = (dim[0] + dim[1]) / 2,\n        inLeftHalf = pointer.left <= xCenter;\n        if(inLeftHalf){\n          method = \"before\";\n          sameResultBox.right -= width / 2;\n        } else\n          sameResultBox.left += width / 2;\n      }\n      if(this.hasChildGroup(index))\n        sameResultBox = emptyBox;\n      this.rootGroup.movePlaceholder(this, item, method, sameResultBox);\n    },\n    getItemDimensions: function  () {\n      if(!this.itemDimensions){\n        this.items = this.$getChildren(this.el, \"item\").filter(\n          \":not(.\" + this.group.options.placeholderClass + \", .\" + this.group.options.draggedClass + \")\"\n        ).get();\n        setDimensions(this.items, this.itemDimensions = [], this.options.tolerance);\n      }\n      return this.itemDimensions;\n    },\n    getItemOffsetParent: function  () {\n      var offsetParent,\n      el = this.el;\n      // Since el might be empty we have to check el itself and\n      // can not do something like el.children().first().offsetParent()\n      if(el.css(\"position\") === \"relative\" || el.css(\"position\") === \"absolute\"  || el.css(\"position\") === \"fixed\")\n        offsetParent = el;\n      else\n        offsetParent = el.offsetParent();\n      return offsetParent;\n    },\n    hasChildGroup: function (index) {\n      return this.options.nested && this.getContainerGroup(index);\n    },\n    getContainerGroup: function  (index) {\n      var childGroup = $.data(this.items[index], subContainerKey);\n      if( childGroup === undefined){\n        var childContainers = this.$getChildren(this.items[index], \"container\");\n        childGroup = false;\n\n        if(childContainers[0]){\n          var options = $.extend({}, this.options, {\n            rootGroup: this.rootGroup,\n            group: groupCounter ++\n          });\n          childGroup = childContainers[pluginName](options).data(pluginName).group;\n        }\n        $.data(this.items[index], subContainerKey, childGroup);\n      }\n      return childGroup;\n    },\n    $getChildren: function (parent, type) {\n      var options = this.rootGroup.options,\n      path = options[type + \"Path\"],\n      selector = options[type + \"Selector\"];\n\n      parent = $(parent);\n      if(path)\n        parent = parent.find(path);\n\n      return parent.children(selector);\n    },\n    _serialize: function (parent, isContainer) {\n      var that = this,\n      childType = isContainer ? \"item\" : \"container\",\n\n      children = this.$getChildren(parent, childType).not(this.options.exclude).map(function () {\n        return that._serialize($(this), !isContainer);\n      }).get();\n\n      return this.rootGroup.options.serialize(parent, children, isContainer);\n    },\n    traverse: function(callback) {\n      $.each(this.items || [], function(item){\n        var group = $.data(this, subContainerKey);\n        if(group)\n          group.traverse(callback);\n      });\n\n      callback(this);\n    },\n    _clearDimensions: function  () {\n      this.itemDimensions = undefined;\n    },\n    _destroy: function() {\n      var that = this;\n\n      this.target.off(eventNames.start, this.handle);\n      this.el.removeData(pluginName);\n\n      if(this.options.drop)\n        this.group.containers = $.grep(this.group.containers, function(val){\n          return val != that;\n        });\n\n      $.each(this.items || [], function(){\n        $.removeData(this, subContainerKey);\n      });\n    }\n  };\n\n  var API = {\n    enable: function() {\n      this.traverse(function(object){\n        object.disabled = false;\n      });\n    },\n    disable: function (){\n      this.traverse(function(object){\n        object.disabled = true;\n      });\n    },\n    serialize: function () {\n      return this._serialize(this.el, true);\n    },\n    refresh: function() {\n      this.traverse(function(object){\n        object._clearDimensions();\n      });\n    },\n    destroy: function () {\n      this.traverse(function(object){\n        object._destroy();\n      });\n    }\n  };\n\n  $.extend(Container.prototype, API);\n\n  /**\n   * jQuery API\n   *\n   * Parameters are\n   *   either options on init\n   *   or a method name followed by arguments to pass to the method\n   */\n  $.fn[pluginName] = function(methodOrOptions) {\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    return this.map(function(){\n      var $t = $(this),\n      object = $t.data(pluginName);\n\n      if(object && API[methodOrOptions])\n        return API[methodOrOptions].apply(object, args) || this;\n      else if(!object && (methodOrOptions === undefined ||\n                          typeof methodOrOptions === \"object\"))\n        $t.data(pluginName, new Container($t, methodOrOptions));\n\n      return this;\n    });\n  };\n\n}(jQuery, window, 'sortable');\n"]}